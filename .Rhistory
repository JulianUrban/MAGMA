scale(unlist(tar_dummy$tar_dummy_1)) +
scale(unlist(tar_dummy$tar_dummy_2)) +
scale(enrichment) +
error_IQ
cor(IQ, enrichment)
cor(IQ, gifted_support)
IQ_norm <- IQ/SD(IQ) * 15 + 100
IQ_norm <- IQ/sd(IQ) * 15 + 100
describe(IQ_norm)
library(psych)
describe(IQ_norm)
IQ_norm <- (IQ/sd(IQ)(1.5)) * 15 + 100
IQ_norm <- (IQ/sd(IQ)(1.5)) * 15 + 100
IQ_norm <- (IQ/sd(IQ)/1.5)) * 15 + 100
IQ_norm <- (IQ/sd(IQ)/1.5) * 15 + 100
describe(IQ_norm)
IQ_norm <- IQ/sd(IQ) * 15 + 100
summary(IQ_norm)
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) +
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
0.5 * enrichment +
rnorm(800, 0, 4)
describe(GPA)
GPA_final <- (GPA + abs(min(GPA)) + 1)/(max(GPA) + abs(min(GPA))) * 6
describe(GPA)
describe(GPA_final)
GPA_final <- (GPA + abs(min(GPA)) + 1)/(max(GPA) + abs(min(GPA))) * 5
describe(GPA_final)
hist(rbeta(n = 1000, shape1 = 1, shape2 = 17))
hist(rbeta(n = 1000, shape1 = 1, shape2 = 10))
hist(rbeta(n = 1000, shape1 = 5, shape2 = 10))
hist(rbeta(n = 1000, shape1 = 2, shape2 = 10))
hist(rbeta(n = 800, shape1 = 2, shape2 = 10))
hist(rbeta(n = 800, shape1 = 2, shape2 = 11))
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) +
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
0.5 * enrichment +
rbeta(n = 800, shape1 = 2, shape2 = 11)
GPA_final <- (GPA + abs(min(GPA)) + 1)/(max(GPA) + abs(min(GPA))) * 5
describe(GPA_final)
GPA_final <- (GPA + abs(min(GPA)) + 1)
describe(GPA_final)
describe(GPA)
hist(GPA)
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) +
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
0.5 * enrichment +
3 * rbeta(n = 800, shape1 = 2, shape2 = 11)
hist(GPA)
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) +
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
0.5 * enrichment +
3 * rbeta(n = 800, shape1 = 2, shape2 = 15)
hist(GPA)
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) +
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
0.5 * enrichment +
10 * rbeta(n = 800, shape1 = 2, shape2 = 11)
hist(GPA)
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) +
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
0.5 * enrichment +
10 * rbeta(n = 800, shape1 = 10, shape2 = 2)
hist(GPA)
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) +
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
0.5 * enrichment +
10 * rbeta(n = 800, shape1 = 2, shape2 = 20)
hist(GPA)
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) +
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
0.5 * enrichment +
10 * rbeta(n = 800, shape1 = 20, shape2 = 2)
hist(GPA)
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) +
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
0.5 * enrichment +
20 * rbeta(n = 800, shape1 = 2, shape2 = 20)
hist(GPA)
hist(rbeta(n = 800, shape1 = 2, shape2 = 20))
hist(scale(rbeta(n = 800, shape1 = 2, shape2 = 11)))
hist(scale(rbeta(n = 800, shape1 = 3, shape2 = 11)))
G
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) +
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
0.5 * enrichment +
5 * scale(rbeta(n = 800, shape1 = 3, shape2 = 11))
hist(GPA)
GPA_final <- (GPA + abs(min(GPA)) + 1)
decsribe(GPA_final)
describe(GPA_final)
GPA_final <- (GPA + abs(min(GPA)))
describe(GPA_final)
GPA_final <- (GPA + abs(min(GPA)))/(max(GPA) + abs(min(GPA))) + 5
describe(GPA_final)
GPA_final <- (GPA + abs(min(GPA)))/(max(GPA) + abs(min(GPA))) * 5 + 1
describe(GPA_final)
hist(GPA_final)
table(GPA_final)/sum(table(GPA_final))
table(GPA_final)
decsribe(GPA_final)
describe(GPA_final)
cor(GPA_final, IQ)
cor(GPA_final, gifted_support)
cor(GPA_final, enrichment)
#Creating covariates
IQ <- 2 * scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
scale(enrichment) +
rnorm(800, 0, 5)
IQ_norm <- IQ/sd(IQ) * 15 + 100
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
0.5 * enrichment +
5 * scale(rbeta(n = 800, shape1 = 3, shape2 = 11))
GPA_final <- (GPA + abs(min(GPA)))/(max(GPA) + abs(min(GPA))) * 5 + 1
cor(GPA_final, enrichment)
cor(GPA_final, IA)
cor(GPA_final, IQ)
IQ <- 2 * scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
scale(enrichment) +
rnorm(800, 0, 5)
IQ_norm <- IQ/sd(IQ) * 15 + 100
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
enrichment +
5 * scale(rbeta(n = 800, shape1 = 3, shape2 = 11))
GPA_final <- (GPA + abs(min(GPA)))/(max(GPA) + abs(min(GPA))) * 5 + 1
describe(IA)
describe(IQ)
describe(IQ_norm)
describe(GPA_final)
parents_academic <- rbinom(800, 1, .35)
IQ <- 2 * scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
scale(enrichment) +
scale(parents_academic) +
rnorm(800, 0, 5)
IQ_norm <- IQ/sd(IQ) * 15 + 100
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
enrichment +
scale(parents_academic) +
5 * scale(rbeta(n = 800, shape1 = 3, shape2 = 11))
GPA_final <- (GPA + abs(min(GPA)))/(max(GPA) + abs(min(GPA))) * 5 + 1
parents_academic <- gifted_support +
rbinom(800, 1, .35)
descibe(parents_academic)
describe(parents_academic)
#Creating covariates
parents_academic <- rbinom(800, 1, gifted_support)
table(parents_academic)
table(parents_academic, gifted_support)
log(0)
#Creating covariates
parents_academic <- rbinom(800, 1, (.35 + rnorm(800, 0 ,0.1)))
table(parents_academic, gifted_support)
cor(parents_academic, gifted_support)
#Creating covariates
parents_academic <- rbinom(800, 1, (.35 + rnorm(800, 0 ,0.05)))
cor(parents_academic, gifted_support)
#Creating covariates
parents_academic <- rbinom(800, 1, (.35 + rnorm(800, 0 ,1)))
#Creating covariates
parents_academic <- rbinom(800, 1, (.35 + rnorm(800, 0 ,.5)))
#Creating covariates
parents_academic <- rbinom(800, 1, (.35 + rnorm(800, 0 ,.3)))
#Creating covariates
parents_academic <- rbinom(800, 1, (.35 + rnorm(800, 0 ,.25)))
#Creating covariates
parents_academic <- rbinom(800, 1, (.35 + gifted_support))
#Creating covariates
parents_academic <- rbinom(800, 1, (.35 + exp(gifted_support)))
#Creating covariates
parents_academic <- rbinom(800, 1, (.35 + log(gifted_support)))
#Creating covariates
parents_academic <- rbinom(800, 1, (.35 + gifted_support * .1))
cor(parents_academic, gifted_support)
IQ <- 2 * scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
scale(enrichment) +
scale(parents_academic) +
rnorm(800, 0, 5)
IQ_norm <- IQ/sd(IQ) * 15 + 100
GPA <- 2 * scale(IQ_norm) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
0.5 * gifted_support +
enrichment +
scale(parents_academic) +
5 * scale(rbeta(n = 800, shape1 = 3, shape2 = 11))
GPA_final <- (GPA + abs(min(GPA)))/(max(GPA) + abs(min(GPA))) * 5 + 1
Motivation <- scale(enrichment) +
scale(unlist(tar_dummy$tar_dummy_1)) +
rnorm(800, 0, 7)
decsribe(Motivation)
describe(Motivation)
Motivation_final <- (Motivation + abs(min(Motivation)))/
(max(Motivation) + abs(min(Motivation))) * 6 + 1
describe(Motivation_final)
#Creating dependent variable
college_GPA <- 2 * scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
1.5 * scale(enrichment) +
2 * scale(parents_academic) +
3 * IQ_norm +
2.5 * GPA_final +
Motivation +
rnorm(800, 0, 10)
cor(college_GPA, GPA_final)
cor(college_GPA, IQ_norm)
#Creating dependent variable
college_GPA <- scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
scale(enrichment) +
scale(parents_academic) +
IQ_norm +
GPA_final +
Motivation +
rnorm(800, 0, 10)
cor(college_GPA, IQ_norm)
cor(college_GPA, IQ_norm)
cor(college_GPA, GPA_final)
#Creating dependent variable
college_GPA <- scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
scale(enrichment) +
scale(parents_academic) +
IQ_norm +
GPA_final +
Motivation +
rnorm(800, 0, 20)
cor(college_GPA, GPA_final)
cor(college_GPA, IQ_norm)
#Creating dependent variable
college_GPA <- scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
scale(enrichment) +
scale(parents_academic) +
IQ_norm +
GPA_final +
Motivation +
rnorm(800, 0, 50)
cor(college_GPA, IQ_norm)
cor(college_GPA, IQ_norm)
cor(college_GPA, GPA_final)
#Creating dependent variable
college_GPA <- scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
scale(enrichment) +
scale(parents_academic) +
IQ_norm +
GPA_final +
Motivation +
rnorm(800, 0, 40)
cor(college_GPA, GPA_final)
cor(college_GPA, IQ_norm)
cor(college_GPA, parents_academic)
describe(college_GPA)
#Creating dependent variable
college_GPA <- scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
scale(enrichment) +
scale(parents_academic) +
scale(IQ_norm) +
scale(GPA_final) +
scale(Motivation) +
rnorm(800, 0, 40)
describe(college_GPA)
cor(college_GPA, parents_academic)
#Creating dependent variable
college_GPA <- scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
scale(enrichment) +
scale(parents_academic) +
scale(IQ_norm) +
scale(GPA_final) +
scale(Motivation) +
rnorm(800, 0, 10)
cor(college_GPA, parents_academic)
#Creating dependent variable
college_GPA <- 1.5 * scale(gifted_support) +
scale(unlist(tar_dummy$tar_dummy_1)) -
scale(unlist(tar_dummy$tar_dummy_2)) +
1.5 * scale(enrichment) +
scale(parents_academic) +
2 * scale(IQ_norm) +
2* scale(GPA_final) +
1.5 * scale(Motivation) +
rnorm(800, 0, 10)
describe(college_GPA)
college_GPA_final <- (college_GPA + abs(min(college_GPA)))/
(max(college_GPA) + abs(min(college_GPA))) * 5 + 1
describe(college_GPA_final)
hist(college_GPA_final)
#Creating data frame
MAGMA_data <- data.frame(ID = c(1:length(gifted_support)),
sex = sex,
gifted_support = gifted_support,
teacher_ability_rating = teacher_ability_rating,
enrichment = enrichment,
parents_academic = parents_academic,
GPA_school = GPA_final,
IQ_score = IQ_norm,
Motivation = Motivation,
college_GPA = college_GPA_final)
View(MAGMA_data)
#Creating data frame
MAGMA_data <- data.frame(ID = c(1:length(gifted_support)),
sex = sex,
gifted_support = gifted_support,
teacher_ability_rating = teacher_ability_rating,
enrichment = enrichment,
parents_academic = parents_academic,
GPA_school = GPA_final,
IQ_score = IQ_norm,
Motivation = Motivation_final,
college_GPA = college_GPA_final)
cor(MAGMA_data)
cor_table <- cor(MAGMA_data)
View(cor_table)
desc_table <- describe(MAGMA_data)
View(desc_table)
View(MAGMA_data)
#Pre-Matching steps
#Multinomial 2x2 variable
MAGMA_data <- MAGMA_data %>%
mutate(support_enrichment = case_when(
gifted_support == 0 & enrichment == 0 ~ 1,
gifted_support == 0 & enrichment == 1 ~ 2,
gifted_support == 1 & enrichment == 0 ~ 1,
gifted_support == 1 & enrichment == 1 ~ 12,
))
#Pre-Matching steps
#Multinomial 2x2 variable
MAGMA_data <- MAGMA_data %>%
mutate(support_enrichment = case_when(
gifted_support == 0 & enrichment == 0 ~ 1,
gifted_support == 0 & enrichment == 1 ~ 2,
gifted_support == 1 & enrichment == 0 ~ 3,
gifted_support == 1 & enrichment == 1 ~ 4,
))
pac_list <- c("tidyverse", "readxl", "glue", "sjlabelled", "psych", "MatchIt",
"janitor", "opencv", "metafor","ggpubr", "mice", "MAGMA",
"ggalt", "ggExtra", "ggridges", "ggthemes", "ggpubr", "twang",
"likert", "RColorBrewer", "sjmisc","extrafont", "robumeta",
"tidytext", "gt", "gtsummary", "knitr", "kableExtra", "huxtable"
)
pacman::p_load(pac_list, install = TRUE,
update = getOption("pac_update"),
character.only = TRUE)
pacman::p_loaded()
View(MAGMA_data)
#Propensity score estimation
ps.es.mean_gifted <- ps(gifted_support  ~ teacher_ability_rating +
parents_academic + GPA_school + IQ_Score +
Motivation,
data = MAGMA_data ,
n.trees = 8000 ,
interaction.depth = 3,
shrinkage = 0.01,
perm.test.iters = 0,
stop.method = c("es.mean", "ks.max", "es.max", "ks.mean") ,
estimand = "ATE",
verbose = F)
#Propensity score estimation
ps.es.mean_gifted <- ps(gifted_support  ~ teacher_ability_rating +
parents_academic + GPA_school + IQ_score +
Motivation,
data = MAGMA_data ,
n.trees = 8000 ,
interaction.depth = 3,
shrinkage = 0.01,
perm.test.iters = 0,
stop.method = c("es.mean", "ks.max", "es.max", "ks.mean") ,
estimand = "ATE",
verbose = F)
#Propensity score estimation
ps.es.mean_gifted <- ps(gifted_support  ~ teacher_ability_rating +
parents_academic + GPA_school + IQ_score +
Motivation + enrichment,
data = MAGMA_data ,
n.trees = 8000 ,
interaction.depth = 3,
shrinkage = 0.01,
perm.test.iters = 0,
stop.method = c("es.mean", "ks.max", "es.max", "ks.mean") ,
estimand = "ATE",
verbose = F)
ps.es.mean_tar <- mnps(teacher_ability_rating  ~ gifted_support +
parents_academic + GPA_school + IQ_score +
Motivation + enrichment,
data = MAGMA_data ,
n.trees = 8000 ,
interaction.depth = 3,
shrinkage = 0.01,
perm.test.iters = 0,
stop.method = c("es.mean", "ks.max", "es.max", "ks.mean") ,
estimand = "ATE",
verbose = F)
ps.es.mean_tar <- mnps(as.factor(teacher_ability_rating)  ~ gifted_support +
parents_academic + GPA_school + IQ_score +
Motivation + enrichment,
data = MAGMA_data ,
n.trees = 8000 ,
interaction.depth = 3,
shrinkage = 0.01,
perm.test.iters = 0,
stop.method = c("es.mean", "ks.max", "es.max", "ks.mean") ,
estimand = "ATE",
verbose = F)
ps.es.mean_gifted <- mnps(as.factor(support_enrichment)  ~ teacher_ability_rating +
parents_academic + GPA_school + IQ_score +
Motivation,
data = MAGMA_data ,
n.trees = 8000 ,
interaction.depth = 3,
shrinkage = 0.01,
perm.test.iters = 0,
stop.method = c("es.mean", "ks.max", "es.max", "ks.mean") ,
estimand = "ATE",
verbose = F)
View(ps.es.mean_tar)
#Extracting propensit score into data frame
MAGMA_data <- MAGMA_data %>%
mutate(ps_gifted = ps.es.mean_gifted[["ps"]][["es.mean.ATE"]],
ps_tar = ps.es.mean_tar[["psList"]][["1"]][["ps"]][["es.mean.ATE"]],
ps_2x2 = ps.es.mean_gifted[["psList"]][["1"]][["ps"]][["es.mean.ATE"]])
View(MAGMA_data)
View(ps.es.mean_gifted)
#Propensity score estimation
ps.es.mean_gifted <- ps(gifted_support  ~ teacher_ability_rating +
parents_academic + GPA_school + IQ_score +
Motivation + enrichment,
data = MAGMA_data ,
n.trees = 8000 ,
interaction.depth = 3,
shrinkage = 0.01,
perm.test.iters = 0,
stop.method = c("es.mean", "ks.max", "es.max", "ks.mean") ,
estimand = "ATE",
verbose = F)
ps.es.mean_tar <- mnps(as.factor(teacher_ability_rating)  ~ gifted_support +
parents_academic + GPA_school + IQ_score +
Motivation + enrichment,
data = MAGMA_data ,
n.trees = 8000 ,
interaction.depth = 3,
shrinkage = 0.01,
perm.test.iters = 0,
stop.method = c("es.mean", "ks.max", "es.max", "ks.mean") ,
estimand = "ATE",
verbose = F)
ps.es.mean_2x2 <- mnps(as.factor(support_enrichment)  ~ teacher_ability_rating +
parents_academic + GPA_school + IQ_score +
Motivation,
data = MAGMA_data ,
n.trees = 8000 ,
interaction.depth = 3,
shrinkage = 0.01,
perm.test.iters = 0,
stop.method = c("es.mean", "ks.max", "es.max", "ks.mean") ,
estimand = "ATE",
verbose = F)
#Extracting propensit score into data frame
MAGMA_data <- MAGMA_data %>%
mutate(ps_gifted = ps.es.mean_gifted[["ps"]][["es.mean.ATE"]],
ps_tar = ps.es.mean_tar[["psList"]][["1"]][["ps"]][["es.mean.ATE"]],
ps_2x2 = ps.es.mean_2x2[["psList"]][["1"]][["ps"]][["es.mean.ATE"]])
View(MAGMA_data)
setwd("~/Forschung/Hbf/MAGMA/R Package")
write.csv(MAGMA_data, "MAGMA_sim_data.csv")
setwd("~/Forschung/Hbf/MAGMA/R Package/MAGMA")
"Funny-Looking Kid"
